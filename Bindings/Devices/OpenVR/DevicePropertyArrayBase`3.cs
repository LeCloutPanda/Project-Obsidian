// <auto-generated/>
/* *******************************
Generated for type: OpenvrDataGetter.Nodes.DevicePropertyArrayBase`3
Generated on: 3/12/2024 2:10:51 AM
Source assembly: Project-Obsidian, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
******************************* */

using System;
using ProtoFlux.Core;
using Elements.Core;
using FrooxEngine;
using FrooxEngine.ProtoFlux;
using OpenvrDataGetter.Nodes;

namespace FrooxEngine.OpenvrDataGetter.Nodes
{
    
    [GenericTypes(GenericTypesAttribute.Group.EnginePrimitivesAndEnums)]
    
    [Category("ProtoFlux/Runtimes/Execution/Nodes/OpenvrDataGetter")]
    public abstract partial class DevicePropertyArrayBase<T, P, R> : global::FrooxEngine.OpenvrDataGetter.Nodes.DeviceProperty<R, P>
        
         where T : unmanaged where P : global::System.Enum where R : unmanaged
    {
        public override Type NodeType => typeof(global::OpenvrDataGetter.Nodes.DevicePropertyArrayBase<T, P, R>);

        

        

        
        
        

        public override int NodeInputCount => base.NodeInputCount + 1;
        

        
        

        
        

        
        

        

        
        

             protected override ISyncRef GetInputInternal(ref int index)
        {
            var @base = base.GetInputInternal(ref index);

            if(@base != null)
                return @base;

            switch(index)
            {
                case 0: return ArrIndex;

                default:
                    index -= 1;
                    return null;
            };
        }

        
        
        

        

        
        
        
        

        
        

        

		public readonly SyncRef<global::FrooxEngine.ProtoFlux.INodeValueOutput<global::System.UInt32>> ArrIndex;

    }
}
